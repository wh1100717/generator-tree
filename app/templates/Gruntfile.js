// Generated by CoffeeScript 1.8.0
module.exports = function(grunt) {
  'use strict';
  require('load-grunt-tasks')(grunt);
  grunt.initConfig({
    pkg: grunt.file.readJSON('package.json'),
    banner: "/*\n * <%= pkg.name %>\n * Copyright <%= grunt.template.today(\"yyyy-mm-dd\") %> <%= pkg.author.name %>\n */",
    clean: {
      build: ['build'],
      tmp: ['.tmp']
    },
    less: {
      compileCore: {
        options: {
          strictMath: true,
          sourceMap: true,
          outputSourceFiles: true,
          sourceMapURL: '<%= pkg.name %>.css.map',
          sourceMapFilename: '.tmp/build/css/<%= pkg.name %>.css.map'
        },
        files: {
          '.tmp/build/css/<%= pkg.name %>.css': 'src/less/<%= pkg.name %>.less'
        }
      }
    },
    cssmin: {
      options: {
        keepSpecialComments: '*',
        noAdvanced: true
      },
      core: {
        files: {
          '.tmp/build/css/<%= pkg.name %>.min.css': '.tmp/build/css/<%= pkg.name %>.css'
        }
      }
    },
    usebanner: {
      dist: {
        options: {
          position: 'top',
          banner: '<%= banner %>'
        },
        files: {
          src: ['.tmp/build/css/<%= pkg.name %>.css', '.tmp/build/css/<%= pkg.name %>.min.css']
        }
      }
    },
    copy: {
      js: {
        expand: true,
        cwd: "src/",
        src: ["js/**/*.js"],
        dest: ".tmp/build/"
      },
      module: {
        expand: true,
        cwd: "src/",
        src: ["module/**/*.js"],
        dest: ".tmp/build/"
      },
      build: {
        expand: true,
        cwd: ".tmp/build/",
        src: ["**"],
        dest: "build/"
      }
    },
    uglify: {
      js: {
        files: [
          {
            expand: true,
            cwd: ".tmp/build/",
            src: ["**/*.js"],
            dest: "build/"
          }
        ]
      }
    },
    connect: {
      options: {
        port: 9007,
        livereload: 42201,
        hostname: 'localhost',
        base: '.',
        middleware: function(connect, options, middlewares) {
          middlewares.unshift(function(req, res, next) {
            if (req.url !== '/' && req.url.indexOf('http://g.tbcdn.cn') === -1) {
              req.url = "/.tmp/build" + req.url;
            }
            return next();
          });
          return middlewares;
        }
      },
      livereload: {
        options: {
          open: true
        }
      }
    },
    watch: {
      less: {
        files: 'src/less/**/*.less',
        tasks: ['less']
      },
      js: {
        files: 'src/js/**/*.js',
        tasks: ['copy:js']
      },
      module: {
        files: 'src/module/**',
        tasks: ['copy:module']
      },
      livereload: {
        options: {
          livereload: '<%= connect.options.livereload %>'
        },
        files: ['{,*/}*.html', '.tmp/build/**/css/{,*/}*.css', '.tmp/build/**/js/{,*/}*.js']
      }
    }
  });
  grunt.registerTask('servebuild', ['clean:tmp', 'copy:js', 'copy:module', 'less']);
  grunt.registerTask('build', ['clean:*', 'copy:js', 'copy:module', 'less', 'cssmin', 'usebanner', 'copy:build', 'uglify:js']);
  grunt.registerTask('serve', ['servebuild', 'connect:livereload', 'watch']);
  grunt.registerTask('server', ['serve']);
  grunt.registerTask('default', ['serve']);
};
